#!/bin/bash

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ –≤ —Ñ–æ–Ω–µ (—Å –æ—Ç–≤—è–∑–∫–æ–π –æ—Ç —Ç–µ—Ä–º–∏–Ω–∞–ª–∞)
run_detached() {
    nohup "$@" > /dev/null 2>&1 &
    echo "‚úÖ –ó–∞–ø—É—â–µ–Ω–æ –≤ —Ñ–æ–Ω–µ (PID: $!). –õ–æ–≥–∏ –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è."
    echo "   –ß—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: pkill -f \"$1\""
}

# –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞
echo "üöÄ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∑–∞–ø—É—Å–∫–∞:"
echo "1) start.mjs (—Å —Ç—É–Ω–Ω–µ–ª–µ–º)"
echo "2) start2.mjs (–±–µ–∑ —Ç—É–Ω–Ω–µ–ª—è)"
echo "3) –í—ã—Ö–æ–¥"
read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1/2/3): " choice

case $choice in
    1)
        echo "üîß –ó–∞–ø—É—Å–∫–∞—é docker-compose down + start.mjs (—Å —Ç—É–Ω–Ω–µ–ª–µ–º)..."
        run_detached bash -c "docker-compose -f docker-compose.yml down; node start.mjs"
        ;;
    2)
        echo "üîß –ó–∞–ø—É—Å–∫–∞—é docker-compose down + start2.mjs (–±–µ–∑ —Ç—É–Ω–Ω–µ–ª—è)..."
        run_detached bash -c "docker-compose -f docker-compose.yml down; node start2.mjs"
        ;;
    3)
        echo "‚ùå –í—ã—Ö–æ–¥."
        exit 0
        ;;
    *)
        echo "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä. –í—ã—Ö–æ–¥."
        exit 1
        ;;
esac

exit 0
